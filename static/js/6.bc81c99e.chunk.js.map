{"version":3,"sources":["pages/login-page/LoginPage.module.css","pages/login-page/LoginPage.js"],"names":["module","exports","mapDispatchToProps","onLogin","authOperations","login","connect","useState","email","setEmail","password","setPassword","Form","onSubmit","event","preventDefault","className","s","Group","controlId","Label","TextLabel","Control","FormControl","type","name","value","placeholder","onChange","target","Button","variant"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,UAAY,6BAA6B,YAAc,iC,8JC+E3I,IAAMC,EAAqB,CACzBC,QAASC,IAAeC,OAGXC,cAAQ,KAAMJ,EAAdI,EA7Ef,YAAiC,IAAZH,EAAW,EAAXA,QAEnB,EAA0BI,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAmCA,OACE,qCACE,4CACA,eAACC,EAAA,EAAD,CAAMC,SATW,SAAAC,GACnBA,EAAMC,iBACNZ,EAAQ,CAAEK,QAAOE,aA5BjBD,EAAS,IACTE,EAAY,KAkCoBK,UAAWC,IAAEL,KAA3C,UACE,eAACA,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACP,EAAA,EAAKQ,MAAN,CAAYJ,UAAWC,IAAEI,UAAzB,2BACA,cAACT,EAAA,EAAKU,QAAN,CACEN,UAAWC,IAAEM,YACbC,KAAK,QACLC,KAAK,QACLC,MAAOlB,EACPmB,YAAY,cACZC,SA5BgB,SAAAd,GACxBA,EAAMC,iBACNN,EAASK,EAAMe,OAAOH,aA8BlB,eAACd,EAAA,EAAKM,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACP,EAAA,EAAKQ,MAAN,CAAYJ,UAAWC,IAAEI,UAAzB,sBACA,cAACT,EAAA,EAAKU,QAAN,CACEN,UAAWC,IAAEM,YACbC,KAAK,WACLC,KAAK,WACLE,YAAY,iBACZD,MAAOhB,EACPkB,SAnCmB,SAAAd,GAC3BA,EAAMC,iBACNJ,EAAYG,EAAMe,OAAOH,aAoCrB,cAACI,EAAA,EAAD,CAAQd,UAAWC,IAAEa,OAAQC,QAAQ,UAAUP,KAAK,SAApD","file":"static/js/6.bc81c99e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"LoginPage_Form__3xcXP\",\"Button\":\"LoginPage_Button__2_W9C\",\"TextLabel\":\"LoginPage_TextLabel__2seL9\",\"FormControl\":\"LoginPage_FormControl__2K3yP\"};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport s from './LoginPage.module.css';\r\n\r\nfunction LoginPage({ onLogin }) {\r\n  // state = { email: '', password: '' };\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  // reset = () => {\r\n  //   this.setState({ email: '', password: '' });\r\n  // };\r\n\r\n  // handleChange = event => {\r\n  //   event.preventDefault();\r\n  //   const { name, value } = event.currentTarget;\r\n  //   const currentState = this.state;\r\n  //   const updateState = { [name]: value };\r\n  //   this.setState({ ...currentState, ...updateState });\r\n  // };\r\n\r\n  const handleEmailChange = event => {\r\n    event.preventDefault();\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = event => {\r\n    event.preventDefault();\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onLogin({ email, password });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Login page</h2>\r\n      <Form onSubmit={handleSubmit} className={s.Form}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label className={s.TextLabel}>Email address</Form.Label>\r\n          <Form.Control\r\n            className={s.FormControl}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Enter email\"\r\n            onChange={handleEmailChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label className={s.TextLabel}>Password</Form.Label>\r\n          <Form.Control\r\n            className={s.FormControl}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className={s.Button} variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.login,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);\r\n"],"sourceRoot":""}