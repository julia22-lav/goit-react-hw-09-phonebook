{"version":3,"sources":["pages/login-page/LoginPage.module.css","pages/login-page/LoginPage.js"],"names":["module","exports","mapDispatchToProps","onLogin","authOperations","login","connect","useState","email","password","user","setUser","handleChange","event","preventDefault","currentTarget","name","value","prev","Form","onSubmit","className","s","Group","controlId","Label","TextLabel","Control","FormControl","type","placeholder","onChange","Button","variant"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,UAAY,6BAA6B,YAAc,iC,6KC+D3I,IAAMC,EAAqB,CACzBC,QAASC,IAAeC,OAGXC,cAAQ,KAAMJ,EAAdI,EA7Df,YAAiC,IAAZH,EAAW,EAAXA,QACnB,EAAwBI,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAaC,EAAb,KASMC,EAAe,SAAAC,GACnBA,EAAMC,iBACN,MAAwBD,EAAME,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdN,GAAQ,SAAAO,GAAI,kCAAUA,GAAV,kBAAiBF,EAAOC,QAStC,OACE,qCACE,4CACA,eAACE,EAAA,EAAD,CAAMC,SATW,SAAAP,GACnBA,EAAMC,iBACNX,EAAQO,GAXRC,EAAQ,CAAEH,MAAO,GAAIC,SAAU,MAkBCY,UAAWC,IAAEH,KAA3C,UACE,eAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYJ,UAAWC,IAAEI,UAAzB,2BACA,cAACP,EAAA,EAAKQ,QAAN,CACEN,UAAWC,IAAEM,YACbC,KAAK,QACLb,KAAK,QACLC,MAAOP,EAAKF,MACZsB,YAAY,cACZC,SAAUnB,OAId,eAACO,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYJ,UAAWC,IAAEI,UAAzB,sBACA,cAACP,EAAA,EAAKQ,QAAN,CACEN,UAAWC,IAAEM,YACbC,KAAK,WACLb,KAAK,WACLc,YAAY,iBACZb,MAAOP,EAAKD,SACZsB,SAAUnB,OAGd,cAACoB,EAAA,EAAD,CAAQX,UAAWC,IAAEU,OAAQC,QAAQ,UAAUJ,KAAK,SAApD","file":"static/js/6.5ba2e1f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"LoginPage_Form__3xcXP\",\"Button\":\"LoginPage_Button__2_W9C\",\"TextLabel\":\"LoginPage_TextLabel__2seL9\",\"FormControl\":\"LoginPage_FormControl__2K3yP\"};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport s from './LoginPage.module.css';\r\n\r\nfunction LoginPage({ onLogin }) {\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const reset = () => {\r\n    setUser({ email: '', password: '' });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.currentTarget;\r\n    setUser(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onLogin(user);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Login page</h2>\r\n      <Form onSubmit={handleSubmit} className={s.Form}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label className={s.TextLabel}>Email address</Form.Label>\r\n          <Form.Control\r\n            className={s.FormControl}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            placeholder=\"Enter email\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label className={s.TextLabel}>Password</Form.Label>\r\n          <Form.Control\r\n            className={s.FormControl}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className={s.Button} variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.login,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);\r\n"],"sourceRoot":""}